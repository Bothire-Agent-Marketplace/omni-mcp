{
  "name": "omni-mcp-platform",
  "version": "1.0.0",
  "description": "Enterprise-grade platform for hosting and managing multiple MCP (Model Context Protocol) servers",
  "private": false,
  "type": "module",
  "license": "MIT",
  "repository": {
    "type": "git",
    "url": "https://github.com/YOUR_USERNAME/omni.git"
  },
  "homepage": "https://github.com/YOUR_USERNAME/omni#readme",
  "bugs": {
    "url": "https://github.com/YOUR_USERNAME/omni/issues"
  },
  "keywords": [
    "mcp",
    "model-context-protocol",
    "ai",
    "automation",
    "enterprise",
    "microservices",
    "typescript",
    "monorepo"
  ],
  "author": "Your Name <your.email@example.com>",
  "scripts": {
    "audit": "echo '🔍 Scanning for dead code and unused dependencies...' && knip",
    "audit:fix": "echo '🧹 Cleaning up dead code and unused dependencies...' && knip --fix",
    "audit:ci": "echo '🔍 CI: Checking for dead code (fails on issues)...' && knip --reporter json",
    "build": "turbo build",
    "dev": "node scripts/dev-start.js",
    "dev:legacy": "concurrently --kill-others --prefix-colors=\"bgBlue.bold,bgGreen.bold,bgYellow.bold\" --names=\"🚀 SERVERS,📊 STUDIO,🌐 NGROK\" \"turbo dev\" \"pnpm db:studio\" \"ngrok start mcp-admin-webhook --config ngrok.yml\"",
    "dev:clean": "node scripts/dev-cleanup.js --cleanup && pnpm dev",
    "dev:no-webhook": "concurrently --kill-others --prefix-colors=\"bgBlue.bold,bgGreen.bold\" --names=\"🚀 SERVERS,📊 STUDIO\" \"turbo dev\" \"pnpm db:studio\"",
    "dev:no-studio": "concurrently --kill-others --prefix-colors=\"bgBlue.bold,bgYellow.bold\" --names=\"🚀 SERVERS,🌐 NGROK\" \"turbo dev\" \"ngrok start mcp-admin-webhook --config ngrok.yml\"",
    "dev:servers-only": "turbo dev",
    "dev:with-ngrok": "concurrently \"turbo dev --filter=mcp-admin\" \"ngrok start mcp-admin-webhook --config ngrok.yml\"",
    "cleanup": "node scripts/dev-cleanup.js --cleanup",
    "ngrok:start": "ngrok start mcp-admin-webhook --config ngrok.yml",
    "ngrok:stop": "pkill -f ngrok",
    "lint": "turbo lint",
    "lint:fix": "turbo lint:fix",
    "test": "turbo test",
    "type-check": "turbo type-check",
    "format": "prettier --write \"**/*.{ts,tsx,js,jsx,json,md}\"",
    "format:check": "prettier --check \"**/*.{ts,tsx,js,jsx,json,md}\"",
    "clean": "turbo clean",
    "dev:gateway": "turbo dev --filter=@mcp/gateway",
    "dev:all-servers": "turbo dev --filter=@mcp/*-server",
    "dev:full": "turbo dev --filter=@mcp/gateway --filter=@mcp/linear-server",
    "health-check": "node scripts/health-check.js",
    "mcp": "node scripts/mcp-cli.js",
    "mcp-remote": "mcp-remote",
    "mcp:client-bridge": "pnpm --filter @mcp/client-bridge build && node packages/mcp-client-bridge/dist/cli/index.js",
    "mcp:generate-configs": "pnpm mcp:client-bridge generate --servers '{\"gateway\":\"http://localhost:37373\"}'",
    "mcp:deploy-configs": "pnpm mcp:client-bridge deploy --servers '{\"gateway\":\"http://localhost:37373\"}'",
    "omni-mcp": "pnpm --filter @mcp/dev-tools build && node packages/dev-tools/dist/src/cli/index.js",
    "arc": "pnpm omni-mcp call chrome_start --args '{\"autoConnect\": true}'",
    "arc:connect": "pnpm omni-mcp call chrome_connect_existing",
    "db:generate": "pnpm --filter @mcp/database db:generate",
    "db:push": "pnpm --filter @mcp/database db:push",
    "db:migrate": "pnpm --filter @mcp/database db:migrate",
    "db:studio": "pnpm --filter @mcp/database db:studio",
    "db:seed": "pnpm --filter @mcp/database db:seed",
    "db:seed:prompts": "pnpm --filter @mcp/database db:seed:prompts",
    "db:reset": "pnpm --filter @mcp/database db:reset",
    "db:reset:force": "pnpm --filter @mcp/database db:reset:force",
    "db:backup": "pnpm --filter @mcp/database db:backup",
    "db:restore": "pnpm --filter @mcp/database db:restore",
    "prepare": "husky"
  },
  "devDependencies": {
    "@eslint/js": "^9.30.1",
    "@typescript-eslint/eslint-plugin": "^8.35.1",
    "@vitest/coverage-v8": "^3.2.4",
    "@vitest/ui": "^3.2.4",
    "concurrently": "^9.2.0",
    "eslint": "^9.30.1",
    "eslint-import-resolver-typescript": "^4.4.4",
    "eslint-plugin-import": "^2.32.0",
    "eslint-plugin-unused-imports": "^4.1.4",
    "husky": "^9.1.7",
    "knip": "^5.61.3",
    "lint-staged": "^16.1.2",
    "prettier": "^3.6.2",
    "turbo": "^2.5.4",
    "typescript": "^5.8.3",
    "vitest": "^3.2.4"
  },
  "lint-staged": {
    "*.{ts,js}": [
      "bash -c 'eslint \"$@\" --ignore-pattern \"**/dist/**\" --ignore-pattern \"**/*.cjs\" --fix --rule \"unused-imports/no-unused-imports: error\" --rule \"import/order: error\"' _",
      "prettier --write"
    ],
    "*.{json,md}": [
      "prettier --write"
    ]
  },
  "packageManager": "pnpm@10.12.4",
  "pnpm": {
    "overrides": {}
  },
  "dependencies": {
    "mcp-remote": "^0.1.18",
    "typescript-eslint": "^8.35.1",
    "zod": "^3.25.74"
  }
}
